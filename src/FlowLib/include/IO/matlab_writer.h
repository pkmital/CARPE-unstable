/*
 * Copyright (c) ICG. All rights reserved.
 *
 * Institute for Computer Graphics and Vision
 * Graz University of Technology / Austria
 *
 *
 * This software is distributed WITHOUT ANY WARRANTY; without even
 * the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 * PURPOSE.  See the above copyright notices for more information.
 *
 *
 * Project     : Matlab array writer
 * Module      :
 * Class       : $RCSfile$
 * Language    : C++
 * Description :
 *
 * Author     :
 * EMail      :
 *
 */

#ifndef MATLABWRITER_H
#define MATLABWRITER_H

# include <string>
# include <sstream>
# include <list>

//////////////////////////////////////////////////////////////////////////////////
//! Class for writing arrays to matlab
//////////////////////////////////////////////////////////////////////////////////
class MatlabWriter
{
  public:
    ////////////////////////////////////////////////////////////////////////////////
    //! Constructor, that simply creates class. Actually does nothing.
    ////////////////////////////////////////////////////////////////////////////////
    MatlabWriter();

    ////////////////////////////////////////////////////////////////////////////////
    //! Destructor, that simply destroys class. Actually does nothing.
    ////////////////////////////////////////////////////////////////////////////////
    ~MatlabWriter();

    ////////////////////////////////////////////////////////////////////////////////
    //! Adds a comment. Comment sign will be prependen, and a newline will be appended.
    //! @param[in] comment   Input string that will be added to internal text
    ////////////////////////////////////////////////////////////////////////////////
    void addComment(std::string comment);

    ////////////////////////////////////////////////////////////////////////////////
    //! Adds a command. Automatically appends a newline.
    //! @param[in] command   Input command that will be added to internal text
    ////////////////////////////////////////////////////////////////////////////////
    void addCommand(std::string command);

    ////////////////////////////////////////////////////////////////////////////////
    //! Adds a floating point list to be written as an 1D array.
    //! @param[in] name Name of the array
    //! @param[in] lst The list to be written
    ////////////////////////////////////////////////////////////////////////////////
    void addList(std::string name, std::list<float> lst);

    ////////////////////////////////////////////////////////////////////////////////
    //! Write the current data to file.
    //! @param[in] filename File name to which will be written.
    ////////////////////////////////////////////////////////////////////////////////
    void write(std::string filename);

    ////////////////////////////////////////////////////////////////////////////////
    //! Deletes all current input.
    //! @todo Has to be implemented
    ////////////////////////////////////////////////////////////////////////////////
    void clear();


  private:
    ////////////////////////////////////////////////////////////////////////////////
    //! Internal data handle.
    std::stringstream data;
};

#endif //MATLABWRITER_H

